public class deanon{
    public static void main (String[] args) {
        for(long l=12852677933; l>0; l>>=5)
            System.out.print((char) (((l & 31 | 64) % 95) + 32));
    }
}
число 64бит, двоичное представление
где для группы из 5бит справа налево
Mikhail Kornienko ZKS-21
справло на лево 
 okneninrok liahkim
| | | | | | 01101 11111 01111 01011 01110 00101 01110 01001 01110 10010 01111 01011 01100
11111
01100 01001 00001 01000 01000 01011 01001 01101
1101111

+150 Число 4946144450195624 соответствует 64 бит, его двоичное представление: 10001100100100111110111111110111101100011000010101000 Программа декодирует символ для каждой группы из 5 бит, справа налево 00100 | 01100 | 10010 | 01111 | 10111 | 11111 | 01111 | 01100 | 01100 | 00101 | 01000 d | л | r | o | w | | o | л | л | e | h 5-битная кодификация. Для 5 бит возможно представить 2⁵ = 32 символа. Английский алфавит содержит 26 букв, это оставляет место для 32 - 26 = 6 символов, кроме букв. С этой схемой кодирования вы можете иметь все 26 (один случай) английских букв и 6 символов (являющихся пространством среди них). Описание алгоритма. >> = 5 в циклах for-loop переходит из группы в группу, тогда группа из 5 бит выделяется. Инициация числа с маской 31₁₀ = 11111₂ в предложении l & 31 Теперь код отображает 5-битное значение к соответствующему 7-битовому символу ascii. Это сложная часть, проверьте двоичные представления для строчных букв алфавита в следующей таблице:
 00100|01100|10010|01111|10111|11111|01111|01100|01100|00101|01000
  1000110 0100100 1111101 1111111 0111101 1000110 000101 01000
